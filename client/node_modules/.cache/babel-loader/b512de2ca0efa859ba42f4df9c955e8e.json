{"ast":null,"code":"var _jsxFileName = \"/home/vladimir/javascript-shop/client/src/pages/AdminBrands.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { fetchBrands, deleteBrand } from '../http/catalogAPI.js';\nimport { Button, Container, Spinner, Table } from 'react-bootstrap';\nimport EditBrand from '../components/EditBrand.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminBrands = () => {\n  _s();\n\n  const [brands, setBrands] = useState(null); // список загруженных брендов\n\n  const [fetching, setFetching] = useState(true); // загрузка списка брендов с сервера\n\n  const [show, setShow] = useState(false); // модальное окно создания-редактирования\n  // для обновления списка после добавления, редактирования, удаления — изменяем состояние\n\n  const [change, setChange] = useState(false); // id бренда, который будем редактировать — для передачи в <EditBrand id={…} />\n\n  const [brandId, setBrandId] = useState(0);\n\n  const handleCreateClick = () => {\n    setBrandId(0);\n    setShow(true);\n  };\n\n  const handleUpdateClick = id => {\n    setBrandId(id);\n    setShow(true);\n  };\n\n  const handleDeleteClick = id => {\n    deleteBrand(id).then(data => {\n      setChange(!change);\n      alert(`Бренд «${data.name}» удален`);\n    }).catch(error => alert(error.response.data.message));\n  };\n\n  useEffect(() => {\n    fetchBrands().then(data => setBrands(data)).finally(() => setFetching(false));\n  }, [change]);\n\n  if (fetching) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      background: '#fff',\n      borderRadius: '15px',\n      width: '1000px',\n      padding: '20px 30px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"\\u0411\\u0440\\u0435\\u043D\\u0434\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => handleCreateClick(),\n      children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0431\\u0440\\u0435\\u043D\\u0434\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EditBrand, {\n      id: brandId,\n      show: show,\n      setShow: setShow,\n      setChange: setChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), brands.length > 0 ? /*#__PURE__*/_jsxDEV(Table, {\n      bordered: true,\n      hover: true,\n      size: \"sm\",\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: brands.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              size: \"sm\",\n              onClick: () => handleUpdateClick(item.id),\n              children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              size: \"sm\",\n              onClick: () => handleDeleteClick(item.id),\n              children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0431\\u0440\\u0435\\u043D\\u0434\\u043E\\u0432 \\u043F\\u0443\\u0441\\u0442\\u043E\\u0439\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AdminBrands, \"EybhWhePQH9WrwuZU7aikR4zF+o=\");\n\n_c = AdminBrands;\nexport default AdminBrands;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminBrands\");","map":{"version":3,"sources":["/home/vladimir/javascript-shop/client/src/pages/AdminBrands.js"],"names":["useState","useEffect","fetchBrands","deleteBrand","Button","Container","Spinner","Table","EditBrand","AdminBrands","brands","setBrands","fetching","setFetching","show","setShow","change","setChange","brandId","setBrandId","handleCreateClick","handleUpdateClick","id","handleDeleteClick","then","data","alert","name","catch","error","response","message","finally","background","borderRadius","width","padding","textAlign","length","map","item"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { fetchBrands, deleteBrand } from '../http/catalogAPI.js'\nimport { Button, Container, Spinner, Table } from 'react-bootstrap'\nimport EditBrand from '../components/EditBrand.js'\n\nconst AdminBrands = () => {\n    const [brands, setBrands] = useState(null) // список загруженных брендов\n    const [fetching, setFetching] = useState(true) // загрузка списка брендов с сервера\n    const [show, setShow] = useState(false) // модальное окно создания-редактирования\n    // для обновления списка после добавления, редактирования, удаления — изменяем состояние\n    const [change, setChange] = useState(false)\n    // id бренда, который будем редактировать — для передачи в <EditBrand id={…} />\n    const [brandId, setBrandId] = useState(0)\n\n    const handleCreateClick = () => {\n        setBrandId(0)\n        setShow(true)\n    }\n\n    const handleUpdateClick = (id) => {\n        setBrandId(id)\n        setShow(true)\n    }\n\n    const handleDeleteClick = (id) => {\n        deleteBrand(id)\n            .then(\n                data => {\n                    setChange(!change)\n                    alert(`Бренд «${data.name}» удален`)\n                }\n            )\n            .catch(\n                error => alert(error.response.data.message)\n            )\n    }\n\n    useEffect(() => {\n        fetchBrands()\n            .then(\n                data => setBrands(data)\n            )\n            .finally(\n                () => setFetching(false)\n            )\n    }, [change])\n\n    if (fetching) {\n        return <Spinner animation=\"border\" />\n    }\n\n    return (\n        <Container style={{background: '#fff', borderRadius: '15px', width: '1000px', padding: '20px 30px'}}>\n            <h1 style={{textAlign: 'center'}}>Бренды</h1>\n            <Button onClick={() => handleCreateClick()}>Создать бренд</Button>\n            <EditBrand id={brandId} show={show} setShow={setShow} setChange={setChange} />\n            {brands.length > 0 ? (\n                <Table bordered hover size=\"sm\" className=\"mt-3\">\n                <thead>\n                    <tr>\n                        <th>Название</th>\n                        <th>Редактировать</th>\n                        <th>Удалить</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {brands.map(item => \n                        <tr key={item.id}>\n                            <td>{item.name}</td>\n                            <td>\n                                <Button variant=\"success\" size=\"sm\" onClick={() => handleUpdateClick(item.id)}>\n                                    Редактировать\n                                </Button>\n                            </td>\n                            <td>\n                                <Button variant=\"danger\" size=\"sm\" onClick={() => handleDeleteClick(item.id)}>\n                                    Удалить\n                                </Button>\n                            </td>\n                        </tr>\n                    )}\n                </tbody>\n                </Table>\n            ) : (\n                <p>Список брендов пустой</p>\n            )}\n        </Container>\n    )\n}\n\nexport default AdminBrands"]},"metadata":{},"sourceType":"module"}